{"version":3,"sources":["utils/validators.js","constants/validator-types.js","pages/auth-pages/input/input.jsx","pages/auth-pages/input/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/placeholder-animated-input/placeholder-animated-input.jsx","components/placeholder-animated-input/index.js","components/contact-form/index.js","components/contact-form/contact-form.jsx","components/contact-message-sent/index.js","components/contact-message-sent/contact-message-sent.jsx","containers/contact-form-container/contact-form-container.jsx","pages/contact-page/contact-page.jsx","pages/contact-page/index.js"],"names":["VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","payload","VALIDATOR_EMAIL","VALIDATOR_CHECKBOX","VALIDATOR_NOT_REQUIRED_BUT_MIN_LENGTH","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","onChangeHandler","e","target","checked","onBlurHandler","errorMsg","className","errorText","component","clonedElement","cloneElement","onChange","onBlur","name","placeholder","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","i","F","s","n","done","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","PlaceholderAnimatedInput","React","useState","input","setInput","labelClass","additionalProps","every","p","hasOwnProperty","itemProps","required","disabled","wrapper","textArea","onKeyDown","style","height","scrollHeight","resize","padding","labelStyle","text","ContactForm","onSubmitHandler","onInputHandler","error","sending","message","onSubmit","aria-invalid","ContactMessageSent","reducer","email","subject","ContactFormContainer","formState","setError","isSent","setSent","setSending","href","width","src","alt","preventDefault","authService","AuthService","contact","then","res","catch","actionType","ContactPage"],"mappings":"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","file":"static/js/12.112f08e6.chunk.js","sourcesContent":["import {\r\n    VALIDATOR_TYPE_CHECKED,\r\n    VALIDATOR_TYPE_EMAIL,\r\n    VALIDATOR_TYPE_FILE,\r\n    VALIDATOR_TYPE_MAX,\r\n    VALIDATOR_TYPE_MAXLENGTH,\r\n    VALIDATOR_TYPE_MIN,\r\n    VALIDATOR_TYPE_MINLENGTH,\r\n    VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH,\r\n    VALIDATOR_TYPE_REQUIRED\r\n} from '../constants/validator-types';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({type: VALIDATOR_TYPE_REQUIRED});\r\nexport const VALIDATOR_FILE = () => ({type: VALIDATOR_TYPE_FILE});\r\nexport const VALIDATOR_MINLENGTH = payload => ({\r\n    type: VALIDATOR_TYPE_MINLENGTH,\r\n    payload: payload\r\n});\r\nexport const VALIDATOR_MAXLENGTH = payload => ({\r\n    type: VALIDATOR_TYPE_MAXLENGTH,\r\n    payload: payload\r\n});\r\nexport const VALIDATOR_MIN = payload => ({type: VALIDATOR_TYPE_MIN, payload: payload});\r\nexport const VALIDATOR_MAX = payload => ({type: VALIDATOR_TYPE_MAX, payload: payload});\r\nexport const VALIDATOR_EMAIL = () => ({type: VALIDATOR_TYPE_EMAIL});\r\nexport const VALIDATOR_CHECKBOX = () => ({type: VALIDATOR_TYPE_CHECKED});\r\nexport const VALIDATOR_NOT_REQUIRED_BUT_MIN_LENGTH = payload => ({\r\n    type: VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH,\r\n    payload: payload\r\n});\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n    for (const validator of validators) {\r\n        if (validator.type === VALIDATOR_TYPE_REQUIRED) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        } else if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n            isValid = isValid && value.trim().length >= validator.payload;\r\n        } else if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n            isValid = isValid && value.trim().length <= validator.payload;\r\n        } else if (validator.type === VALIDATOR_TYPE_MIN) {\r\n            isValid = isValid && +value >= validator.payload;\r\n        } else if (validator.type === VALIDATOR_TYPE_MAX) {\r\n            isValid = isValid && +value <= validator.payload;\r\n        } else if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n\r\n            const regExp = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/\r\n\r\n            isValid = isValid && regExp.test(value);\r\n\r\n        } else if (validator.type === VALIDATOR_TYPE_CHECKED) {\r\n            isValid = value;\r\n        } else if (validator.type === VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH) {\r\n            isValid = isValid && (value.trim().length >= validator.payload || value.trim().length === 0);\r\n        }\r\n    }\r\n    return isValid;\r\n};\r\n","const VALIDATOR_TYPE_REQUIRED = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\nconst VALIDATOR_TYPE_CHECKED = 'CHECKED';\r\nconst VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH = 'NOT_REQUIRED_BUT_MIN_LENGTH';\r\n\r\nexport {\r\n    VALIDATOR_TYPE_REQUIRED,\r\n    VALIDATOR_TYPE_MINLENGTH,\r\n    VALIDATOR_TYPE_MAXLENGTH,\r\n    VALIDATOR_TYPE_MIN,\r\n    VALIDATOR_TYPE_MAX,\r\n    VALIDATOR_TYPE_EMAIL,\r\n    VALIDATOR_TYPE_FILE,\r\n    VALIDATOR_TYPE_CHECKED,\r\n    VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH\r\n};","import React, {useReducer, useEffect, cloneElement} from 'react';\r\nimport {validate} from \"../../../utils/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.payload,\r\n                isValid: validate(action.payload, action.validators)\r\n            };\r\n        case 'BLUR':\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = (props) => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        isValid: props.initialValid || false,\r\n        isTouched: false\r\n    });\r\n    const {id, onInput} = props;\r\n    const {value, isValid, isTouched} = inputState;\r\n\r\n    useEffect(() => {\r\n        if (props.onInput) {\r\n            props.onInput(props.id, inputState.value, inputState.isValid);\r\n        }\r\n    }, [id, onInput, isValid, value]);\r\n\r\n    const onChangeHandler = (e) => {\r\n        if (props.type === 'checkbox') {\r\n            dispatch({type: 'INPUT_CHANGE', payload: e.target.checked, validators: props.validators});\r\n            props.onChangeHandler();\r\n        }\r\n        else {\r\n            dispatch({type: 'INPUT_CHANGE', payload: e.target.value, validators: props.validators});\r\n        }\r\n    };\r\n\r\n    const onBlurHandler = () => {\r\n        dispatch({type: 'BLUR'});\r\n    };\r\n\r\n    const errorMsg = !isValid && isTouched ? <p className={`input__error-msg`}>{props.errorText}</p> : null;\r\n\r\n    if (props.component) {\r\n        const clonedElement = cloneElement(\r\n            props.component,\r\n            {\r\n                id: props.id,\r\n                onChange: onChangeHandler,\r\n                onBlur: onBlurHandler,\r\n                name: props.name,\r\n                placeholder: props.placeholder,\r\n                type: props.type,\r\n                value: inputState.value\r\n            }\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    clonedElement\r\n                }\r\n                {errorMsg}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input id={props.id}\r\n                   onChange={onChangeHandler}\r\n                   onBlur={onBlurHandler}\r\n                   name={props.name}\r\n                   placeholder={props.placeholder}\r\n                   type={props.type}\r\n                   value={inputState.value}\r\n            />\r\n            {errorMsg}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Input;","import Input from \"./input\";\r\n\r\nexport default Input;","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from \"react\";\r\nimport \"./placeholder-animated-input.scss\";\r\n\r\nconst PlaceholderAnimatedInput = (props) => {\r\n    const [input, setInput] = React.useState(props.value || '');\r\n\r\n    let labelClass = null;\r\n\r\n    if (props.value && input) {\r\n        labelClass += ' input-if-default-value';\r\n    }\r\n    if (input) {\r\n        labelClass += ' input-if-default-value';\r\n    }\r\n\r\n    const registerProps = [\"id\", \"onChange\", \"onBlur\", \"name\", \"placeholder\", \"type\", \"value\"];\r\n    let additionalProps;\r\n    if (registerProps.every(p => props.hasOwnProperty(p))) {\r\n        additionalProps = props;\r\n    }\r\n\r\n    const itemProps = {\r\n        ...additionalProps,\r\n        onChange: (e) => {\r\n            setInput(e.target.value);\r\n            if (props.onChange) {\r\n                props.onChange(e)\r\n            }\r\n        },\r\n        className: `${props.className} ${props.required === true ? \"input-required\" : \"input-non-required\"}`,\r\n        name: props.name,\r\n        required: props.required,\r\n        disabled: props.disabled || false,\r\n        type: props.type || 'text',\r\n        onInput: props.onInput || null\r\n    }\r\n\r\n    const resizeTextArea = (e) => {\r\n        e.target.style.height = 'inherit';\r\n        e.target.style.height = `${e.target.scrollHeight}px`;\r\n    }\r\n    \r\n    return (\r\n        <div className={`input-container ${props.wrapper}`}>\r\n            {props.textArea || false ? <textarea onKeyDown={resizeTextArea} style={{resize: 'none', padding: '10px'}} {...itemProps}/> : <input {...itemProps}/>}\r\n            <label className={`component-label ${props.labelStyle} ${labelClass}`}>{props.text}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlaceholderAnimatedInput;","import PlaceholderAnimatedInput from \"./placeholder-animated-input\";\r\n\r\nexport default PlaceholderAnimatedInput;","import ContactForm from \"./contact-form\";\r\n\r\nexport default ContactForm;","import React, {useReducer, useState} from \"react\";\r\nimport \"./contact-form.scss\";\r\nimport PlaceholderAnimatedInput from \"../placeholder-animated-input\";\r\nimport SpinnerAudio from \"../spinner-audio\";\r\n\r\nconst ContactForm = (props) => {\r\n\r\n    const {onSubmitHandler, onInputHandler, error, sending} = props;\r\n    if (error) {\r\n        return (<p>{error.message}</p>);\r\n    }\r\n\r\n    if (sending) {\r\n        return (<SpinnerAudio/>);\r\n    }\r\n\r\n    return (\r\n        <form className=\"contact-form\" onSubmit={onSubmitHandler}>\r\n            <div className=\"contact-info-block\">\r\n                <PlaceholderAnimatedInput className=\"name\"\r\n                                          name=\"name\"\r\n                                          wrapper=\"contact-input\"\r\n                                          required={true}\r\n                                          text=\"Name\"\r\n                                          onInput={(e) => onInputHandler(e, 'name')}\r\n                > </PlaceholderAnimatedInput>\r\n\r\n                <PlaceholderAnimatedInput className=\"email\"\r\n                                          name=\"email\"\r\n                                          wrapper=\"contact-input\"\r\n                                          required={true}\r\n                                          text=\"Email\"\r\n                                          type=\"email\"\r\n                                          aria-invalid={true}\r\n                                          onInput={(e) => onInputHandler(e, 'email')}\r\n                > </PlaceholderAnimatedInput>\r\n            </div>\r\n            <PlaceholderAnimatedInput className=\"subject\"\r\n                                      name=\"subject\"\r\n                                      required={true}\r\n                                      text=\"Subject\"\r\n                                      onInput={(e) => onInputHandler(e, 'subject')}\r\n\r\n            >\r\n            </PlaceholderAnimatedInput>\r\n            <PlaceholderAnimatedInput className=\"message\"\r\n                                      name=\"message\"\r\n                                      required={true}\r\n                                      text=\"Message\"\r\n                                      textArea={true}\r\n                                      onInput={(e) => onInputHandler(e, 'message')}\r\n            > </PlaceholderAnimatedInput>\r\n\r\n            <button type=\"submit\" className=\"invert-button\">SEND MESSAGE</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactForm;\r\n","import ContactMessageSent from \"./contact-message-sent\";\r\n\r\nexport default ContactMessageSent;","import React from 'react';\r\nimport './contact-message-sent.scss';\r\n\r\nconst ContactMessageSent = () => {\r\n    return (\r\n        <div className={`message-sent-container`}>\r\n            <p>Your message has been sent successfully!</p>\r\n            <p>I will respond you in approximately 1 day, but I usually do it in about 2 hours</p>\r\n            <p>Thank you, Cherries By.</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ContactMessageSent;","import React, {useReducer, useState} from \"react\";\r\nimport ContactForm from \"../../components/contact-form\";\r\nimport \"./contact-form-container.scss\";\r\nimport Input from '../../pages/auth-pages/input/';\r\nimport AuthService from \"../../services/auth-service\";\r\nimport ContactMessageSent from \"../../components/contact-message-sent\";\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'name':\r\n            return {\r\n                ...state,\r\n                name: action.payload\r\n            }\r\n        case 'email':\r\n            return {\r\n                ...state,\r\n                email: action.payload\r\n            }\r\n        case 'subject':\r\n            return {\r\n                ...state,\r\n                subject: action.payload\r\n            }\r\n        case 'message':\r\n            return {\r\n                ...state,\r\n                message: action.payload\r\n            }\r\n    }\r\n}\r\n\r\nconst ContactFormContainer = () => {\r\n\r\n    const [formState, dispatch] = useReducer(reducer, {\r\n        name: '',\r\n        email: '',\r\n        subject: '',\r\n        message: ''\r\n    });\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isSent, setSent] = useState(false);\r\n    const [sending, setSending] = useState(false);\r\n\r\n    const onInputHandler = (e, actionType) => {\r\n        dispatch({type: actionType, payload: e.target.value});\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const authService = new AuthService();\r\n        setSending(true);\r\n        authService.contact(formState.email, formState.subject, formState.name, formState.message)\r\n            .then(res => {\r\n                setSent(true);\r\n                setSending(false);\r\n            })\r\n            .catch(e => {\r\n                setError(e);\r\n                setSending(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-page-contact bg-black\">\r\n            <div className={`description`}>\r\n                <h2>Contact</h2>\r\n                <p>If you have any questions you can contact me via this form or directly using my socials.</p>\r\n                <a href=\"youtube\" target=\"_blank\" className=\"youtube\"><img width=\"40\"\r\n                                                                           src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/09/YouTube_full-color_icon_%282017%29.svg/1200px-YouTube_full-color_icon_%282017%29.svg.png\"\r\n                                                                           alt=\"asd\"/>&nbsp; /cherriesby</a>\r\n                <a href=\"instagram\" className=\"instagram\"><img width=\"30\"\r\n                                                               src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/1024px-Instagram_icon.png\"\r\n                                                               alt=\"asd\"/>&nbsp; /cherriesby</a>\r\n                <a href=\"instagram\" className=\"instagram\"><img width=\"30\"\r\n                                                               src=\"https://img.icons8.com/color/48/000000/twitter--v1.png\"\r\n                                                               alt=\"twitter\"/>&nbsp; /cherriesby</a>\r\n                <a href=\"instagram\" className=\"instagram\"><img width=\"30\"\r\n                                                               src=\"https://img.icons8.com/fluent/48/000000/facebook-new.png\"\r\n                                                               alt=\"twitter\"/>&nbsp; /cherriesby</a>\r\n            </div>\r\n            {isSent ? <ContactMessageSent/> : <ContactForm sending={sending} error={error} onSubmitHandler={onSubmitHandler} onInputHandler={onInputHandler}/>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactFormContainer;\r\n","import React from 'react';\r\nimport ContactFormContainer from \"../../containers/contact-form-container/contact-form-container\";\r\n\r\n\r\nconst ContactPage = () => {\r\n\r\n    return (\r\n        <ContactFormContainer/>\r\n    );\r\n};\r\n\r\nexport default ContactPage;\r\n\r\n","import ContactPage from \"./contact-page\";\r\n\r\nexport default ContactPage;"],"sourceRoot":""}