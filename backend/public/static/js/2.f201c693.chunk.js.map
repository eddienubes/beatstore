{"version":3,"sources":["components/license-type-modal/license-type-modal.jsx","components/license-type-modal/index.js","components/big-search/big-search.jsx","hooks/trace-updates-hook.js","components/track/index.js","components/track/track.jsx","components/tracks-table/tracks-table.jsx"],"names":["ToCartButton","trackId","price","licenseType","setOpen","caption","desc","popup","licenseId","isInCart","dispatch","useDispatch","history","useHistory","onClick","e","stopPropagation","replace","appendToCart","product","beatId","className","_id","toString","icon","faCheck","LicenseTypeModal","props","useSelector","state","licensesReducer","isLoading","licenses","show","captions","useMemo","popups","imageUrl","process","track","imgUrl","TransitionablePortal","open","transition","animation","duration","Modal","basic","onOpen","onClose","size","centered","Content","onBlur","Row","Col","xl","md","sm","src","alt","title","tags","map","tag","i","key","bpm","type","label","toLowerCase","id","Actions","Button","inverted","faTimes","BigSearch","isMain","useState","search","setSearch","formState","beatsReducer","filter","data-text","placeholder","autoComplete","value","onChange","target","filterSearchSet","undefined","Math","floor","window","innerHeight","onKeyPress","push","length","faSearch","require","useEffect","useRef","Track","React","memo","onSelected","index","isPlaying","previousId","cartItems","modalShow","setModalShow","isActive","setActive","useContext","AudioInstanceContext","audioInstance","find","console","log","Table","audioStopped","audioLoaded","audioPlayed","Cell","scale","innerText","faShoppingCart","buttonClass","prevProps","nextProps","some","newCartItem","oldCartItem","selectedId","setSelected","beatList","error","hasMore","isFiltering","skip","audioReducer","items","userReducer","cart","firstMountBeatCount","beatsDropped","fetchBeats","filterDropped","tracks","beat","genres","moods","next","limit","loader","dataLength","onScroll","structured","unstackable","Header","HeaderCell","width","textAlign","Body","slice"],"mappings":"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","file":"static/js/2.f201c693.chunk.js","sourcesContent":["import React, {useMemo} from 'react';\r\nimport './license-type-modal.scss';\r\nimport {Col, Row} from 'react-bootstrap'\r\nimport {Button, Modal, TransitionablePortal} from 'semantic-ui-react'\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SpinnerAudio from \"../spinner-audio\";\r\nimport {appendToCart} from \"../../redux/actions\";\r\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons/faCheck\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst ToCartButton = ({trackId, price, licenseType, setOpen, caption, desc, popup, licenseId, isInCart}) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <button onClick={(e) => {\r\n            e.stopPropagation();\r\n            if (licenseType === 4) {\r\n                history.replace('/contact');\r\n            }\r\n            else {\r\n                dispatch(appendToCart({product: {beatId: trackId, licenseId}}));\r\n            }\r\n            setOpen();\r\n        }}\r\n                className=\"license-button-choice mp3-lease\">\r\n            {isInCart ? isInCart.licenseId._id.toString() === licenseId ?\r\n                <div className={`selected-in-cart`}><FontAwesomeIcon icon={faCheck}/></div> : null : null}\r\n            <div className=\"license__choice-caption\">{caption}</div>\r\n            <div className=\"license__choice-price\">${price}</div>\r\n            <div className=\"license__choice-desc\">{desc}</div>\r\n            <div className=\"popup\">{popup}</div>\r\n        </button>\r\n    );\r\n};\r\n\r\n\r\nconst LicenseTypeModal = (props) => {\r\n    const {isLoading, licenses} = useSelector(state => state.licensesReducer);\r\n    let show = props.show;\r\n    const setOpen = props.setOpen;\r\n\r\n    const captions = useMemo(() => ['mp3 lease', 'wav lease', 'track out lease', 'unlimited lease', 'exclusive'], []);\r\n    const desc = useMemo(() => ['MP3', 'MP3 AND WAV', 'MP3, WAV AND TRACK STEMS', 'MP3, WAV AND TRACK STEMS', 'JUST CONTACT ME ' +\r\n    'VIA CONTACT FORM OR USING ' +\r\n    'EMAIL/INSTAGRAM'], []);\r\n    const popups = useMemo(() => ['CLICK TO ADD IN YOUR CART', 'CLICK TO GO TO CONTACT PAGE'], []);\r\n    const imageUrl = useMemo(() => process.env.REACT_APP_BACKEND_ASSET_URL + props.track.imgUrl, [props.track]);\r\n\r\n    if (isLoading) {\r\n        return (<SpinnerAudio/>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TransitionablePortal open={show} transition={{animation: 'zoom', duration: 350}}>\r\n                <Modal\r\n                    className=\"license__main-modal-container\"\r\n                    basic\r\n                    onOpen={(e) => {\r\n                        e.stopPropagation();\r\n\r\n                        setOpen(true);\r\n                    }}\r\n                    onClose={(e) => {\r\n                        e.stopPropagation();\r\n\r\n\r\n                        setOpen(false);\r\n                    }}\r\n                    open={true}\r\n                    size='small'\r\n                    centered\r\n                >\r\n                    <Modal.Content onClick={e => {\r\n                        e.stopPropagation()\r\n                    }} className=\"licenses-container\"\r\n                                   onBlur={e => {\r\n                                       e.stopPropagation();\r\n                                   }}\r\n                    >\r\n                        <div className=\"licenses-container\">\r\n                            <Row className=\"track-description-container\">\r\n                                <Col xl={1} md={2} sm={2} className=\"license__img-container\">\r\n                                    <img className=\"license__img-main\" src={imageUrl} alt=\"track\"/>\r\n                                </Col>\r\n                                <Col xl={6} md={4} sm={4} className=\"license__beat_information\">\r\n                                    <div className=\"license__beat-name\">\r\n                                        <span className=\"license__green\">Track name:</span> {props.track.title}\r\n                                    </div>\r\n                                    <div className=\"license__author-name\">\r\n                                        <span className=\"license__green\">Producer:</span> Cherries\r\n                                    </div>\r\n                                    <div className=\"license__tags-container\">\r\n                                        <span>Tags:</span> {props.track.tags.map((tag, i) => <span key={i}\r\n                                                                                                   className=\"tag\">#{tag}&nbsp;</span>)}\r\n                                    </div>\r\n                                    <div className=\"license__bpm\">\r\n                                        <span className=\"license_bpm-caption\">BPM: </span> {props.track.bpm}\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n\r\n                                <Col xl={3} md={4} sm={12}>\r\n                                    <ToCartButton\r\n                                        licenseType={licenses[3].type}\r\n                                        price={licenses[3].price}\r\n                                        caption={licenses[3].label.toLowerCase()}\r\n                                        desc={desc[0]}\r\n                                        popup={popups[0]}\r\n                                        setOpen={() => {\r\n                                            setOpen(false)\r\n                                        }}\r\n                                        isInCart={props.isInCart}\r\n                                        licenseId={licenses[3].id}\r\n                                        trackId={props.track.id}\r\n                                    />\r\n                                </Col>\r\n                                <Col xl={3} md={4} sm={12}>\r\n                                    <ToCartButton\r\n                                        licenseType={licenses[2].type}\r\n                                        price={licenses[2].price}\r\n                                        caption={licenses[2].label.toLowerCase()}\r\n                                        desc={desc[1]}\r\n                                        popup={popups[0]}\r\n                                        setOpen={() => {\r\n                                            setOpen(false)\r\n                                        }}\r\n                                        isInCart={props.isInCart}\r\n                                        licenseId={licenses[2].id}\r\n                                        trackId={props.track.id}\r\n                                    />\r\n                                </Col>\r\n                                <Col xl={3} md={4} sm={12}>\r\n                                    <ToCartButton\r\n                                        licenseType={licenses[1].type}\r\n                                        price={licenses[1].price}\r\n                                        caption={licenses[1].label.toLowerCase()}\r\n                                        desc={desc[2]}\r\n                                        popup={popups[0]}\r\n                                        setOpen={() => {\r\n                                            setOpen(false)\r\n                                        }}\r\n                                        isInCart={props.isInCart}\r\n                                        licenseId={licenses[1].id}\r\n                                        trackId={props.track.id}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col xl={3} md={6} sm={12}>\r\n                                    <ToCartButton\r\n                                        licenseType={licenses[0].type}\r\n                                        price={licenses[0].price}\r\n                                        caption={licenses[0].label.toLowerCase()}\r\n                                        desc={desc[3]}\r\n                                        popup={popups[0]}\r\n                                        setOpen={() => {\r\n                                            setOpen(false)\r\n                                        }}\r\n                                        isInCart={props.isInCart}\r\n                                        licenseId={licenses[0].id}\r\n                                        trackId={props.track.id}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col xl={12} md={6} sm={12}>\r\n                                    <ToCartButton\r\n                                        licenseType={4}\r\n                                        price={'~'}\r\n                                        caption={captions[4]}\r\n                                        desc={desc[4]}\r\n                                        popup={popups[1]}\r\n                                        setOpen={() => {\r\n                                            setOpen(false)\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Modal.Content>\r\n                    <Modal.Actions onClick={e => e.stopPropagation()}>\r\n                        <Button basic className=\"license__choice-close-button\" inverted\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    setOpen(false)\r\n                                }}>\r\n                            <div\r\n\r\n                                className=\"license__close-button-icon\"><FontAwesomeIcon icon={faTimes}/> Close\r\n                            </div>\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </TransitionablePortal>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default LicenseTypeModal;\r\n\r\n","import LicenseTypeModal from \"./license-type-modal\";\r\n\r\nexport default LicenseTypeModal;","import React, {useState} from \"react\";\r\nimport \"./big-search.scss\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {filter, filterSearchSet} from \"../../redux/actions/actions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst BigSearch = ({isMain = false}) => {\r\n    const [search, setSearch] = useState('');\r\n    const dispatch = useDispatch();\r\n    const formState = useSelector(state => state.beatsReducer).filter;\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className=\"big-search\">\r\n            <h1 className=\"glitch\" data-text=\"Cherries By\">Cherries By</h1>\r\n            <span className=\"sub\">BEATSTORE</span>\r\n            {/*<h1 className=\"logo\">Cherries By</h1>*/}\r\n            <div className=\"search\">\r\n                <input placeholder=\"What type of track are you looking for?\"\r\n                       id=\"search\"\r\n                       type=\"search\"\r\n                       autoComplete=\"off\"\r\n                       value={formState.search}\r\n                       onChange={e => {\r\n                           setSearch(e.target.value);\r\n                           dispatch(filterSearchSet(e.target.value));\r\n\r\n                            if (!isMain) {\r\n                                dispatch(filter(undefined, Math.floor(window.innerHeight / 65)));\r\n                            }\r\n                       }}\r\n                       onKeyPress={e => {\r\n                           if (e.key === 'Enter' && isMain) {\r\n                               history.push('/beats');\r\n                           }\r\n                           else if (!isMain && e.key === 'Enter') {\r\n                               dispatch(filter(undefined, Math.floor(window.innerHeight / 65)));\r\n                           }\r\n                       }}\r\n                />\r\n                <button className=\"search-magnifier-button\" onClick={() => {\r\n                    setSearch(formState.search);\r\n                    if (search.length > 0) {\r\n\r\n                        if (isMain) {\r\n                            history.push('/beats');\r\n                        }\r\n                        else if (!isMain) {\r\n                            dispatch(filter(undefined, Math.floor(window.innerHeight / 65)));\r\n                        }\r\n                    }\r\n                }}>\r\n                    <FontAwesomeIcon icon={faSearch}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BigSearch;\r\n","const {useEffect} = require(\"react\");\r\nconst {useRef} = require(\"react\");\r\n\r\n\r\nconst useTraceUpdate = (props) => {\r\n    const prev = useRef(props);\r\n    useEffect(() => {\r\n        const changedProps = Object.entries(props).reduce((ps, [k, v]) => {\r\n            if (prev.current[k] !== v) {\r\n                ps[k] = [prev.current[k], v];\r\n            }\r\n            return ps;\r\n        }, {});\r\n        if (Object.keys(changedProps).length > 0) {\r\n            console.log('Changed props:', changedProps);\r\n        }\r\n        prev.current = props;\r\n    });\r\n}\r\n\r\nexport default useTraceUpdate;","import Track from './track';\r\n\r\nexport default Track;","import React, {useContext, useEffect, useMemo, useState} from \"react\";\r\nimport \"./track.scss\";\r\nimport {faShoppingCart} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport LicenseTypeModal from \"../license-type-modal\";\r\nimport {Table} from 'semantic-ui-react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {audioLoaded, audioPlayed, audioStopped, filterSearchSet} from \"../../redux/actions\";\r\nimport AudioInstanceContext from \"../audio-instance-context\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {filter} from \"../../redux/actions/actions\";\r\n\r\nconst Track = ({track, onSelected, index, id, previousId, isPlaying, cartItems}) => {\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [isActive, setActive] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const {audioInstance} = useContext(AudioInstanceContext).state;\r\n    const history = useHistory();\r\n\r\n    // useTraceUpdate({isActive, audioInstance, id, previousId, isPlaying});\r\n\r\n    useEffect(() => {\r\n        if (track.id === id && isPlaying) {\r\n            setActive(true);\r\n        } else if (track.id === id && !isPlaying) {\r\n            setActive(false);\r\n        } else {\r\n            setActive(false);\r\n        }\r\n    }, [id, isPlaying]);\r\n\r\n    // TODO MOVE onClick logic to redux\r\n    // TODO ADD Audio Instance to Redux Store\r\n\r\n    const isInCart = cartItems.find(i => {\r\n        return i.beatId._id.toString() === track.id.toString()\r\n    });\r\n\r\n    const onClick = (e) => {\r\n        e.stopPropagation();\r\n\r\n        if (track.id === id && isPlaying) {\r\n            dispatch(audioStopped());\r\n        } else if (track.id !== id) {\r\n            dispatch(audioLoaded(track.id));\r\n        } else if (track.id === id && !isPlaying) {\r\n            dispatch(audioPlayed());\r\n        }\r\n    };\r\n\r\n    const imageUrl = useMemo(() => process.env.REACT_APP_BACKEND_ASSET_URL + track.imgUrl, [track]);\r\n\r\n    // useTraceUpdate({track, id, previousId, isPlaying});\r\n\r\n    useEffect(() => {\r\n        console.log('render');\r\n    })\r\n\r\n    return (\r\n        <Table.Row className={`main-row-track ${isActive ? \"selected_tr\" : null}`}\r\n                   onClick={onClick}>\r\n            <Table.Cell className={`tracks__title`}>\r\n                <div className=\"track__td-img\">\r\n                    <img className=\"td-img-main\" src={imageUrl} alt=\"beat image\"/>\r\n                </div>\r\n                {track.title}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {track.duration}\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n                {track.bpm}\r\n            </Table.Cell>\r\n            <Table.Cell className={`tracks__scale`}>\r\n                {track.scale}\r\n            </Table.Cell>\r\n            <Table.Cell className={`track__tags`}>\r\n                <div className={`tags-container`}>\r\n                    {track.tags.map((tag, i) => <b\r\n                        key={i}\r\n                        className=\"track__tag\"\r\n                        onClick={e => {\r\n                            e.stopPropagation();\r\n                            // dispatch(filterDropped());\r\n                            dispatch(filterSearchSet(e.target.innerText));\r\n                            dispatch(filter(undefined, Math.floor(window.innerHeight / 65)));\r\n                            history.push('/beats');\r\n                        }}\r\n                    >#{tag}</b>)}\r\n                </div>\r\n            </Table.Cell>\r\n            <Table.Cell className={`tracks__button-buy`}>\r\n                <button className={`track__to-cart-button ${isInCart ? \"in-cart-button\" : null}`}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setModalShow(true);\r\n                        }}>\r\n                    {isInCart ? 'IN CART' : (<><FontAwesomeIcon icon={faShoppingCart}/> ADD</>)}\r\n                </button>\r\n                <LicenseTypeModal key={track.id}\r\n                                  isInCart={isInCart}\r\n                                  track={track}\r\n                                  buttonClass=\"cart_button\"\r\n                                  show={modalShow}\r\n                                  setOpen={setModalShow}/>\r\n            </Table.Cell>\r\n        </Table.Row>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(Track, (prevProps, nextProps) => {\r\n    const trackId = prevProps.track.id;\r\n\r\n    console.log(nextProps.cartItems.some(i => i.beatId._id.toString() === trackId.toString(),\r\n        prevProps.cartItems.some(i => i.beatId._id.toString() === trackId.toString())));\r\n\r\n    const newCartItem = nextProps.cartItems.find(i => {\r\n        return i.beatId._id.toString() === trackId.toString()\r\n    });\r\n    const oldCartItem = prevProps.cartItems.find(i => {\r\n        return i.beatId._id.toString() === trackId.toString()\r\n    });\r\n\r\n    if (newCartItem && oldCartItem && newCartItem.licenseId._id !== oldCartItem.licenseId._id) {\r\n        return false;\r\n    }\r\n\r\n    if (nextProps.cartItems.some(i => i.beatId._id.toString() === trackId.toString()) !==\r\n        prevProps.cartItems.some(i => i.beatId._id.toString() === trackId.toString())\r\n    ) {\r\n        return false;\r\n    }\r\n\r\n    return trackId !== nextProps.id &&\r\n        trackId !== nextProps.previousId;\r\n});","import React, {useContext, useEffect, useMemo, useState} from \"react\";\r\nimport Track from \"../track\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport {fetchBeats, filterDropped} from \"../../redux/actions\";\r\nimport {Table} from 'semantic-ui-react';\r\nimport Spinner from \"../spinner\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport AudioInstanceContext from \"../audio-instance-context\";\r\n\r\nimport \"./tracks-table.scss\";\r\nimport {beatsDropped} from \"../../redux/actions/actions\";\r\n\r\nconst TracksTable = ({isMain = true}) => {\r\n    const [selectedId, setSelected] = useState(null);\r\n    const {\r\n        beatList,\r\n        isLoading,\r\n        error,\r\n        hasMore,\r\n        skip,\r\n        isFiltering,\r\n        filter,\r\n    } = useSelector(state => state.beatsReducer);\r\n    const {audioInstance} = useContext(AudioInstanceContext).state;\r\n    const dispatch = useDispatch();\r\n    const {id, isPlaying, previousId} = useSelector(state => state.audioReducer);\r\n    const {items} = useSelector(state => state.userReducer).cart;\r\n\r\n    const firstMountBeatCount = useMemo(() => Math.floor(window.innerHeight / 65), [window.innerHeight]);\r\n\r\n    const loadBeats = (limit) => {\r\n        dispatch(fetchBeats(limit));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // dispatch(filterDropped());\r\n        dispatch(beatsDropped());\r\n        if (!isFiltering) {\r\n            dispatch(fetchBeats(firstMountBeatCount));\r\n        }\r\n\r\n        return () => {\r\n            if (!isMain) {\r\n                dispatch(filterDropped());\r\n            } else {\r\n                dispatch(beatsDropped());\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const tracks = useMemo(() => {\r\n        return beatList.map((beat, index) => {\r\n            return <Track\r\n                index={index}\r\n                key={beat.id}\r\n                track={beat}\r\n                onSelected={(id) => setSelected(id)}\r\n                selectedId={selectedId}\r\n                id={id}\r\n                isPlaying={isPlaying}\r\n                previousId={previousId}\r\n                cartItems={items}\r\n            />;\r\n        })\r\n    }, [beatList, id, items, isPlaying, previousId, isFiltering]);\r\n\r\n    if (error) {\r\n        return <ErrorIndicator/>\r\n    }\r\n\r\n    if ((!audioInstance || isFiltering) && !isMain) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    if (!isFiltering &&\r\n        beatList.length === 0 &&\r\n        !isLoading &&\r\n        !isMain &&\r\n        (filter.search !== '' ||\r\n            filter.bpm ||\r\n            filter.genres ||\r\n            filter.moods ||\r\n            filter.tags)\r\n    ) {\r\n        return <p className={`no-matches`}>Sorry, unfortunately we haven't found any beats matching your request...</p>\r\n    }\r\n\r\n    return (\r\n        <InfiniteScroll next={!isMain && beatList.length > 0 ? loadBeats : null} hasMore={hasMore} loader={null}\r\n                        dataLength={beatList.length}>\r\n            <div className={`tracks-table-main`} onScroll={e => console.log(e.target)}>\r\n                <Table structured unstackable>\r\n                    <Table.Header>\r\n                        <Table.Row className={`table-head`}>\r\n                            <Table.HeaderCell className={'tracks__gray-text '} width={6} textAlign=\"left\">\r\n                                <div className=\"track__td-img\"></div>\r\n                                TITLE\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell className={'tracks__gray-text'} width={1}>\r\n                                TIME\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell className={'tracks__gray-text'} width={1}>\r\n                                BPM\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell className={'tracks__gray-text tracks__scale'} width={1}>\r\n                                SCALE\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell className={'tracks__gray-text track__tags'} width={5}>\r\n                                TAGS\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell className={'tracks__gray-text'} width={1}>\r\n\r\n                            </Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body className={`table-body-main`}>\r\n                        {isMain ? tracks.slice(0, 10) : tracks}\r\n                    </Table.Body>\r\n\r\n                </Table>\r\n                {isLoading && <Spinner/>}\r\n            </div>\r\n        </InfiniteScroll>\r\n    );\r\n};\r\n\r\nexport default React.memo(TracksTable);\r\n"],"sourceRoot":""}