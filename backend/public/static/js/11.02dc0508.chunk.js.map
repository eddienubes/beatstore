{"version":3,"sources":["utils/validators.js","constants/validator-types.js","pages/auth-pages/input/input.jsx","pages/auth-pages/input/index.js","components/placeholder-animated-input/placeholder-animated-input.jsx","components/placeholder-animated-input/index.js","hooks/form-hook.js","hooks/audio-hook.js","components/hoc/with-auth-service.jsx","components/purchases-table/box.png","components/user-profile/index.js","components/user-profile/user-profile.jsx","components/purchases-table/index.js","components/purchases-table/purchases-table.jsx","pages/account-page/account-page.jsx","pages/account-page/index.js"],"names":["VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","payload","VALIDATOR_EMAIL","VALIDATOR_CHECKBOX","VALIDATOR_NOT_REQUIRED_BUT_MIN_LENGTH","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","onChangeHandler","e","target","checked","onBlurHandler","errorMsg","className","errorText","component","clonedElement","cloneElement","onChange","onBlur","name","placeholder","PlaceholderAnimatedInput","React","useState","input","setInput","labelClass","additionalProps","every","p","hasOwnProperty","itemProps","required","disabled","wrapper","textArea","onKeyDown","style","height","scrollHeight","resize","padding","labelstyle","text","formReducer","formIsValid","inputId","inputs","undefined","confirmed","password","confirmedPassword","useForm","initialInputs","initialFormValidity","initialConfirmed","initialState","formState","useCallback","inputData","withAuthService","Wrapped","authService","AuthService","module","exports","UserProfile","useSelector","userReducer","processing","email","username","error","useDispatch","useMemo","newPassword","newPasswordConfirmed","touched","setTouched","onInputHandler","errorMsg2","onSubmit","preventDefault","updateUser","message","PurchasesTable","purchases","purchased","history","useHistory","src","box","alt","Table","celled","inverted","selectable","Header","Row","HeaderCell","textAlign","Body","map","item","index","dateObj","Date","date","month","getUTCMonth","day","getUTCDate","getUTCFullYear","imageUrl","process","imgUrl","key","beatId","licenseId","orderId","Cell","Label","ribbon","title","bpm","scale","price","label","Dropdown","icon","faAngleDown","direction","Menu","links","link","lIndex","Item","faFileDownload","onClick","push","url","themeOverrided","createMuiTheme","overrides","MuiPaper","root","MuiTouchRipple","textColorcolor","MuiTabs","overflowX","color","indicator","textColor","backgroundColor","TabPanel","children","other","role","hidden","aria-labelledby","overflow","Box","a11yProps","useStyles","makeStyles","theme","palette","background","paper","width","tabs","AccountPage","location","useLocation","loggedIn","classes","useTheme","setValue","pathname","split","pop","AppBar","position","Tabs","centered","event","newValue","variant","aria-label","Tab","axis","onChangeIndex","slideStyle","dir","to"],"mappings":"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","file":"static/js/11.02dc0508.chunk.js","sourcesContent":["import {\r\n    VALIDATOR_TYPE_CHECKED,\r\n    VALIDATOR_TYPE_EMAIL,\r\n    VALIDATOR_TYPE_FILE,\r\n    VALIDATOR_TYPE_MAX,\r\n    VALIDATOR_TYPE_MAXLENGTH,\r\n    VALIDATOR_TYPE_MIN,\r\n    VALIDATOR_TYPE_MINLENGTH,\r\n    VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH,\r\n    VALIDATOR_TYPE_REQUIRED\r\n} from '../constants/validator-types';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({type: VALIDATOR_TYPE_REQUIRED});\r\nexport const VALIDATOR_FILE = () => ({type: VALIDATOR_TYPE_FILE});\r\nexport const VALIDATOR_MINLENGTH = payload => ({\r\n    type: VALIDATOR_TYPE_MINLENGTH,\r\n    payload: payload\r\n});\r\nexport const VALIDATOR_MAXLENGTH = payload => ({\r\n    type: VALIDATOR_TYPE_MAXLENGTH,\r\n    payload: payload\r\n});\r\nexport const VALIDATOR_MIN = payload => ({type: VALIDATOR_TYPE_MIN, payload: payload});\r\nexport const VALIDATOR_MAX = payload => ({type: VALIDATOR_TYPE_MAX, payload: payload});\r\nexport const VALIDATOR_EMAIL = () => ({type: VALIDATOR_TYPE_EMAIL});\r\nexport const VALIDATOR_CHECKBOX = () => ({type: VALIDATOR_TYPE_CHECKED});\r\nexport const VALIDATOR_NOT_REQUIRED_BUT_MIN_LENGTH = payload => ({\r\n    type: VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH,\r\n    payload: payload\r\n});\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n    for (const validator of validators) {\r\n        if (validator.type === VALIDATOR_TYPE_REQUIRED) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        } else if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n            isValid = isValid && value.trim().length >= validator.payload;\r\n        } else if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n            isValid = isValid && value.trim().length <= validator.payload;\r\n        } else if (validator.type === VALIDATOR_TYPE_MIN) {\r\n            isValid = isValid && +value >= validator.payload;\r\n        } else if (validator.type === VALIDATOR_TYPE_MAX) {\r\n            isValid = isValid && +value <= validator.payload;\r\n        } else if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n\r\n            const regExp = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/\r\n\r\n            isValid = isValid && regExp.test(value);\r\n\r\n        } else if (validator.type === VALIDATOR_TYPE_CHECKED) {\r\n            isValid = value;\r\n        } else if (validator.type === VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH) {\r\n            isValid = isValid && (value.trim().length >= validator.payload || value.trim().length === 0);\r\n        }\r\n    }\r\n    return isValid;\r\n};\r\n","const VALIDATOR_TYPE_REQUIRED = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\nconst VALIDATOR_TYPE_CHECKED = 'CHECKED';\r\nconst VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH = 'NOT_REQUIRED_BUT_MIN_LENGTH';\r\n\r\nexport {\r\n    VALIDATOR_TYPE_REQUIRED,\r\n    VALIDATOR_TYPE_MINLENGTH,\r\n    VALIDATOR_TYPE_MAXLENGTH,\r\n    VALIDATOR_TYPE_MIN,\r\n    VALIDATOR_TYPE_MAX,\r\n    VALIDATOR_TYPE_EMAIL,\r\n    VALIDATOR_TYPE_FILE,\r\n    VALIDATOR_TYPE_CHECKED,\r\n    VALIDATOR_TYPE_NOT_REQUIRED_BUT_MIN_LENGTH\r\n};","import React, {useReducer, useEffect, cloneElement} from 'react';\r\nimport {validate} from \"../../../utils/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.payload,\r\n                isValid: validate(action.payload, action.validators)\r\n            };\r\n        case 'BLUR':\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = (props) => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        isValid: props.initialValid || false,\r\n        isTouched: false\r\n    });\r\n    const {id, onInput} = props;\r\n    const {value, isValid, isTouched} = inputState;\r\n\r\n    useEffect(() => {\r\n        if (props.onInput) {\r\n            props.onInput(props.id, inputState.value, inputState.isValid);\r\n        }\r\n    }, [id, onInput, isValid, value]);\r\n\r\n    const onChangeHandler = (e) => {\r\n        if (props.type === 'checkbox') {\r\n            dispatch({type: 'INPUT_CHANGE', payload: e.target.checked, validators: props.validators});\r\n            props.onChangeHandler();\r\n        }\r\n        else {\r\n            dispatch({type: 'INPUT_CHANGE', payload: e.target.value, validators: props.validators});\r\n        }\r\n    };\r\n\r\n    const onBlurHandler = () => {\r\n        dispatch({type: 'BLUR'});\r\n    };\r\n\r\n    const errorMsg = !isValid && isTouched ? <p className={`input__error-msg`}>{props.errorText}</p> : null;\r\n\r\n    if (props.component) {\r\n        const clonedElement = cloneElement(\r\n            props.component,\r\n            {\r\n                id: props.id,\r\n                onChange: onChangeHandler,\r\n                onBlur: onBlurHandler,\r\n                name: props.name,\r\n                placeholder: props.placeholder,\r\n                type: props.type,\r\n                value: inputState.value\r\n            }\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    clonedElement\r\n                }\r\n                {errorMsg}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input id={props.id}\r\n                   onChange={onChangeHandler}\r\n                   onBlur={onBlurHandler}\r\n                   name={props.name}\r\n                   placeholder={props.placeholder}\r\n                   type={props.type}\r\n                   value={inputState.value}\r\n            />\r\n            {errorMsg}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Input;","import Input from \"./input\";\r\n\r\nexport default Input;","import React from \"react\";\r\nimport \"./placeholder-animated-input.scss\";\r\n\r\nconst PlaceholderAnimatedInput = (props) => {\r\n    const [input, setInput] = React.useState(props.value || '');\r\n\r\n    let labelClass = null;\r\n\r\n    if (props.value && input) {\r\n        labelClass += ' input-if-default-value';\r\n    }\r\n    if (input) {\r\n        labelClass += ' input-if-default-value';\r\n    }\r\n\r\n    const registerProps = [\"id\", \"onChange\", \"onBlur\", \"name\", \"placeholder\", \"type\", \"value\"];\r\n    let additionalProps;\r\n    if (registerProps.every(p => props.hasOwnProperty(p))) {\r\n        additionalProps = props;\r\n    }\r\n\r\n    const itemProps = {\r\n        ...additionalProps,\r\n        onChange: (e) => {\r\n            setInput(e.target.value);\r\n            if (props.onChange) {\r\n                props.onChange(e)\r\n            }\r\n        },\r\n        className: `${props.className} ${props.required === true ? \"input-required\" : \"input-non-required\"}`,\r\n        name: props.name,\r\n        required: props.required,\r\n        disabled: props.disabled || false,\r\n        type: props.type || 'text',\r\n        onInput: props.onInput || null\r\n    }\r\n\r\n    const resizeTextArea = (e) => {\r\n        e.target.style.height = 'inherit';\r\n        e.target.style.height = `${e.target.scrollHeight}px`;\r\n    }\r\n    \r\n    return (\r\n        <div className={`input-container ${props.wrapper}`}>\r\n            {props.textArea || false ? <textarea onKeyDown={resizeTextArea} style={{resize: 'none', padding: '10px'}} {...itemProps}/> : <input {...itemProps}/>}\r\n            <label className={`component-label ${props.labelstyle} ${labelClass}`}>{props.text}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlaceholderAnimatedInput;","import PlaceholderAnimatedInput from \"./placeholder-animated-input\";\r\n\r\nexport default PlaceholderAnimatedInput;","import {useCallback, useReducer} from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (let inputId in state.inputs) {\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                }\r\n                else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n\r\n            if (state.confirmed !== undefined) {\r\n                const {password, confirmedPassword} = state.inputs;\r\n                let confirmed = true;\r\n\r\n                if (action.inputId === 'password') {\r\n                    confirmed = confirmed &&\r\n                        action.value === confirmedPassword.value &&\r\n                        action.value && confirmedPassword.isValid;\r\n                }\r\n                if (action.inputId === 'confirmedPassword') {\r\n                    confirmed = confirmed &&\r\n                        action.value === password.value &&\r\n                        action.value && password.isValid;\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    inputs: {\r\n                        ...state.inputs,\r\n                        [action.inputId]: {\r\n                            value: action.value,\r\n                            isValid: action.isValid\r\n                        }\r\n                    },\r\n                    isValid: formIsValid,\r\n                    confirmed\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: {\r\n                        value: action.value,\r\n                        isValid: action.isValid\r\n                    }\r\n                },\r\n                isValid: formIsValid,\r\n            }\r\n        case 'SET_DATA':\r\n            if (action.confirmed !== undefined) {\r\n                return {\r\n                    inputs: action.inputs,\r\n                    isValid: action.isValid,\r\n                    confirmed: action.confirmed\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    inputs: action.inputs,\r\n                    isValid: action.isValid,\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst useForm = (initialInputs, initialFormValidity, initialConfirmed) => {\r\n    let initialState;\r\n    if (initialConfirmed !== undefined) {\r\n        initialState = {\r\n            inputs: initialInputs,\r\n            isValid: initialFormValidity,\r\n            confirmed: initialConfirmed\r\n        };\r\n    }\r\n    else {\r\n        initialState = {\r\n            inputs: initialInputs,\r\n            isValid: initialFormValidity,\r\n        };\r\n    }\r\n\r\n    const [formState, dispatch] = useReducer(formReducer, initialState);\r\n\r\n    const onInputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value,\r\n            isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, initialFormValidity, initialConfirmed) => {\r\n        if (initialConfirmed !== undefined) {\r\n            dispatch({\r\n                type: 'SET_DATA',\r\n                inputs: inputData,\r\n                isValid: initialFormValidity,\r\n                confirmed: initialConfirmed\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: 'SET_DATA',\r\n                inputs: inputData,\r\n                isValid: initialFormValidity,\r\n            });\r\n        }\r\n    }, []);\r\n    return [formState, onInputHandler, setFormData];\r\n}\r\n\r\nexport default useForm;","import {useCallback} from \"react\";\r\nimport {audioLoaded, audioPlayed, audioStopped} from \"../redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport audioReducer from \"../redux/reducers/audio-reducer\";\r\n\r\nconst useAudio = (track, index) => {\r\n    const {id, isPlaying} = useSelector(state => state.audioReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = useCallback((e) => {\r\n        e.stopPropagation();\r\n\r\n        if (track.id === id && isPlaying) {\r\n            dispatch(audioStopped());\r\n        } else if (track.id !== id) {\r\n            dispatch(audioLoaded(track.id));\r\n        } else if (track.id === id && !isPlaying) {\r\n            dispatch(audioPlayed());\r\n        }\r\n    }, [track, index, id, isPlaying]);\r\n\r\n    return [id, isPlaying, onClick];\r\n}\r\n\r\nexport default useAudio;","import React from 'react';\r\nimport AuthService from \"../../services/auth-service\";\r\n\r\nconst withAuthService = (Wrapped) => {\r\n    const authService = new AuthService();\r\n\r\n    return (props) => {\r\n        return (\r\n            <Wrapped {...props} authService={authService}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withAuthService;","module.exports = __webpack_public_path__ + \"static/media/box.0467e5dc.png\";","import UserProfile from \"./user-profile\";\r\n\r\nexport default UserProfile;","import React, {useMemo, useState} from 'react';\r\nimport PlaceholderAnimatedInput from \"../placeholder-animated-input\";\r\nimport Input from \"../../pages/auth-pages/input\";\r\nimport Spinner from \"../spinner\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useForm from \"../../hooks/form-hook\";\r\nimport {VALIDATOR_EMAIL, VALIDATOR_NOT_REQUIRED_BUT_MIN_LENGTH, VALIDATOR_REQUIRE} from \"../../utils/validators\";\r\nimport {withAuthService} from '../hoc';\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport {updateUser} from \"../../redux/actions\";\r\nimport './user-profile.scss';\r\n\r\n\r\nconst UserProfile = ({authService}) => {\r\n    const {processing, email, username, id, error} = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const initialState = useMemo(() => {\r\n        return {\r\n            inputs: {\r\n                email: {\r\n                    value: email,\r\n                    isValid: true\r\n                },\r\n                username: {\r\n                    value: username,\r\n                    isValid: true\r\n                },\r\n                password: {\r\n                    value: '',\r\n                    isValid: false\r\n                },\r\n                newPassword: {\r\n                    value: '',\r\n                    isValid: true\r\n                },\r\n                newPasswordConfirmed: {\r\n                    value: '',\r\n                    isValid: true\r\n                }\r\n            },\r\n            isValid: false\r\n        }\r\n    }, [username, email]);\r\n\r\n    const [touched, setTouched] = useState(false);\r\n    const [formState, onInputHandler, setFormData] = useForm(initialState.inputs, initialState.isValid);\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser(id, {\r\n            email: formState.inputs.email.value,\r\n            username: formState.inputs.username.value,\r\n            password: formState.inputs.password.value,\r\n            newPassword: formState.inputs.newPassword.value\r\n        }));\r\n    }\r\n\r\n    const {newPassword, newPasswordConfirmed} = formState.inputs;\r\n\r\n    const hasConfirmedError = newPassword.value !== newPasswordConfirmed.value;\r\n    const errorMsg = hasConfirmedError ?\r\n        <p className=\"user-profile__error-msg\">Your new password and new confirmed password should be\r\n            identical</p> : null;\r\n\r\n\r\n    const hasEnoughCharacters = newPassword.value > 6 && newPasswordConfirmed.value > 6 ||\r\n        newPassword.value.length === 0 && newPasswordConfirmed.value.length === 0;\r\n    const errorMsg2 = !hasEnoughCharacters && touched ?\r\n        (<p className=\"user-profile__error-msg\">Your new password should contain at least 6 characters</p>) : null;\r\n\r\n    if (processing) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    // if (error) {\r\n    //     return <ErrorIndicator/>\r\n    // }\r\n\r\n    return (\r\n        <div className=\"user-profile__main\">\r\n            <form\r\n                onSubmit={onSubmitHandler}\r\n                className=\"user-profile__container\"\r\n                onBlur={e => {\r\n                    e.preventDefault();\r\n                    setTouched(true);\r\n                }}>\r\n                <div className=\"header\">\r\n\r\n                    <p className=\"username\">Welcome to your profile, {username}</p>\r\n                    <p>Feel free to change your information.</p>\r\n                </div>\r\n                <div className=\"settings\">\r\n                    <Input\r\n                        component={<PlaceholderAnimatedInput text=\"E-mail\"\r\n                                                             className=\"input-set\"\r\n                                                             wrapper=\"wrapper\"/>}\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        errorText=\"Please enter correct email address\"\r\n                        validators={[VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()]}\r\n                        onInput={onInputHandler}\r\n                        initialValue={formState.inputs.email.value}\r\n                        initialValid={formState.inputs.email.isValid}\r\n                    />\r\n                    <Input\r\n                        component={<PlaceholderAnimatedInput text=\"Username\"\r\n                                                             className=\"input-set\"\r\n                                                             wrapper=\"wrapper\"/>}\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        errorText=\"Please enter at least 1 character as username\"\r\n                        validators={[VALIDATOR_NOT_REQUIRED_BUT_MIN_LENGTH(1)]}\r\n                        onInput={onInputHandler}\r\n                        initialValue={formState.inputs.username.value}\r\n                        initialValid={formState.inputs.username.isValid}\r\n                    />\r\n                    <Input\r\n                        component={<PlaceholderAnimatedInput text=\"Current password\"\r\n                                                             className=\"input-set\"\r\n                                                             wrapper=\"wrapper\"\r\n                        />}\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        errorText=\"This field is required to change your data..\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        onInput={onInputHandler}\r\n                    />\r\n\r\n                    <div className=\"tips\">\r\n                        <p className=\"tip-header\">Change account password</p>\r\n                        <p>In case you don't want to change your password leave blanks below empty</p>\r\n                    </div>\r\n\r\n                    <div className=\"new-password-container\">\r\n                        <Input\r\n                            component={<PlaceholderAnimatedInput text=\"New password\"\r\n                                                                 className=\"input-set\"\r\n                                                                 wrapper=\"wrapper\"\r\n\r\n                            />}\r\n                            id=\"newPassword\"\r\n                            name=\"newPassword\"\r\n                            type=\"password\"\r\n                            errorText=\"\"\r\n                            initialValid={true}\r\n                            validators={[VALIDATOR_NOT_REQUIRED_BUT_MIN_LENGTH(6)]}\r\n                            onInput={onInputHandler}\r\n                        />\r\n                        <Input\r\n                            component={<PlaceholderAnimatedInput text=\"Confirm new password\"\r\n                                                                 className=\"input-set\"\r\n                                                                 wrapper=\"wrapper\"\r\n\r\n                            />}\r\n                            id=\"newPasswordConfirmed\"\r\n                            name=\"newPasswordConfirmed\"\r\n                            type=\"password\"\r\n                            errorText=\"\"\r\n                            initialValid={true}\r\n                            validators={[VALIDATOR_NOT_REQUIRED_BUT_MIN_LENGTH(6)]}\r\n                            onInput={onInputHandler}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={!formState.isValid}\r\n                >Save</button>\r\n                {errorMsg}\r\n                {errorMsg2}\r\n                {error ? <span className=\"user-profile__error-msg\">{error.message}</span> : null}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withAuthService(UserProfile);","import PurchasesTable from \"./purchases-table\";\r\n\r\nexport default PurchasesTable;","import React from 'react';\r\nimport {Dropdown, Label, Table} from \"semantic-ui-react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport box from './box.png'\r\nimport './purchases-table.scss';\r\nimport useAudio from \"../../hooks/audio-hook\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleDown, faAngleUp, faFileDownload} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst PurchasesTable = () => {\r\n    const purchases = useSelector(state => state.userReducer).purchased;\r\n    const history = useHistory();\r\n\r\n    if (purchases.length === 0) {\r\n\r\n        return (\r\n            <div className={`empty-box-warning`}>\r\n                <img src={box} alt=\"empty box\"/>\r\n                <p className={`empty-cart-caption`}>You have not purchased anything yet.. :c</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Table celled inverted selectable className={`purchases-table`}>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>TITLE</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign={`center`}>BPM</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign={`center`}>Scale</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign={`center`}>Date</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign={`center`}>Price</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign={`center`}>License Type</Table.HeaderCell>\r\n                    <Table.HeaderCell textAlign={`center`}>Links</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n                {\r\n                    purchases.map((item, index) => {\r\n                        const dateObj = new Date(item.date);\r\n                        const month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n                        const day = dateObj.getUTCDate();\r\n                        const year = dateObj.getUTCFullYear();\r\n\r\n                        const date = year + \"/\" + month + \"/\" + day;\r\n\r\n                        const imageUrl = process.env.REACT_APP_BACKEND_ASSET_URL + item.imgUrl;\r\n\r\n                        return (\r\n                            <Table.Row key={item.beatId + item.licenseId + item.orderId + index}\r\n                                       className={`purchased-item`}>\r\n                                <Table.Cell textAlign={`left`}>\r\n                                    <Label className={`label`} ribbon><img src={imageUrl} alt=\"cover\"/></Label>\r\n                                    {item.title}\r\n                                </Table.Cell>\r\n                                <Table.Cell textAlign=\"center\">{item.bpm}</Table.Cell>\r\n                                <Table.Cell textAlign=\"center\">{item.scale}</Table.Cell>\r\n                                <Table.Cell textAlign=\"center\">{date}</Table.Cell>\r\n                                <Table.Cell textAlign=\"center\" className={`price-item`}>{item.price}$</Table.Cell>\r\n                                <Table.Cell textAlign=\"center\">{item.label}</Table.Cell>\r\n                                <Table.Cell textAlign=\"center\">\r\n                                    <Dropdown\r\n                                        className={`drop-down`}\r\n                                        text='Files'\r\n                                        icon={<FontAwesomeIcon className={`icon`} icon={faAngleDown}/>}\r\n                                        direction=\"left\"\r\n                                        key={item.beatId + item.licenseId + item.orderId + index + 'menu'}\r\n                                    >\r\n                                        <Dropdown.Menu className={`menu`}\r\n                                        >\r\n                                            {\r\n                                                item.links.map((link, lIndex) => {\r\n                                                    return (\r\n                                                        <Dropdown.Item\r\n                                                            key={link.label + lIndex + item.beatId + item.licenseId + item.orderId}\r\n                                                            icon={<FontAwesomeIcon className={`icon`} icon={faFileDownload}/>}\r\n                                                            text={link.label}\r\n                                                            onClick={() => history.push(link.url)}\r\n                                                        />\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        )\r\n                    })\r\n                }\r\n            </Table.Body>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default PurchasesTable;\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {Redirect, useHistory, useLocation} from 'react-router-dom';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport './account-page.scss';\r\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\r\nimport {orange} from \"@material-ui/core/colors\";\r\n\r\nimport UserProfile from \"../../components/user-profile\";\r\nimport PurchasesTable from \"../../components/purchases-table\";\r\nimport Footer from \"../../components/footer\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst themeOverrided = createMuiTheme({\r\n    overrides: {\r\n        MuiPaper: {\r\n            root: {\r\n                // backgroundColor: '#ff00c1',\r\n\r\n            }\r\n        },\r\n        MuiTouchRipple: {\r\n            root: {\r\n                text: {\r\n                    textColorcolor: 'white'\r\n                }\r\n            }\r\n        },\r\n        MuiTabs: {\r\n            overflowX: 'visible',\r\n            root: {\r\n                overflowX: 'visible'\r\n            },\r\n            text: {\r\n                color: 'white',\r\n            },\r\n            indicator: {\r\n                textColor: '#ff00c1',\r\n                backgroundColor: '#ff00c1'\r\n            }\r\n        },\r\n    }\r\n});\r\n\r\nconst TabPanel = (props) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            style={{overflow: 'visible'}}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiPaper-root\": {\r\n            backgroundColor: '#000000',\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n    tabs: {\r\n        overflowX: 'visible'\r\n    },\r\n    overrides: {\r\n        // backgroundColor: \"#ff00c1\"\r\n    }\r\n}));\r\n\r\nconst AccountPage = () => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const {loggedIn} = useSelector(state => state.userReducer);\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    useEffect(() => {\r\n        if (location.pathname.split('/').pop() === 'profile') {\r\n            setValue(0)\r\n        } else if (location.pathname.split('/').pop() === 'purchases') {\r\n            setValue(1)\r\n        }\r\n    }, [location])\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n        if (newValue === 0) {\r\n            history.push('/account/profile');\r\n        } else if (newValue === 1) {\r\n            history.push('/account/purchases');\r\n        }\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    if (!loggedIn) {\r\n        return (<Redirect to='/'/>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root + \" account-page\"}>\r\n                <MuiThemeProvider theme={themeOverrided}>\r\n                    <AppBar position=\"static\" color=\"default\">\r\n                        <Tabs\r\n                            centered\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            variant=\"fullWidth\"\r\n                            aria-label=\"full width tabs example\"\r\n                            className={classes.tabs}\r\n                        >\r\n                            <Tab className=\"account-page__tab\" label=\"Profile\" {...a11yProps(0)} />\r\n                            <Tab className=\"account-page__tab\" label=\"Purchases\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <SwipeableViews\r\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                        index={value}\r\n                        onChangeIndex={handleChangeIndex}\r\n                        slideStyle={{overflow: 'visible'}}\r\n                    >\r\n                        <TabPanel value={value} index={0} dir={theme.direction}>\r\n                            <UserProfile/>\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={1} dir={theme.direction}>\r\n                            <PurchasesTable/>\r\n                        </TabPanel>\r\n                    </SwipeableViews>\r\n                </MuiThemeProvider>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AccountPage;","import AccountPage from \"./account-page\";\r\n\r\nexport default AccountPage;"],"sourceRoot":""}