name: Admin Bot CD

on:
  workflow_dispatch:

#  CI:
#  uses: ./.github/workflows/admin-bot-ci.yml

jobs:
  CD:
    #    needs: [ CI ]
    environment: admin-bot-production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create proper .env # Incorrect
        uses: shine1594/secrets-to-env-action@v1.6.1
        with:
          secrets_env: production
          secrets: ${{ toJSON(secrets) }}
          file_name_prod: ./admin-bot/.env

      - name: Login to private registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

#      - name: Build and push the image
#        uses: whoan/docker-build-with-cache-action@v6
#        with:
#          image_tag: latest
#          registry: ${{ secrets.REGISTRY_URL }}
#          username: ${{ secrets.REGISTRY_USERNAME }}
#          password: ${{ secrets.REGISTRY_PASSWORD }}
#          image_name: beatstore-admin-bot
#          context: ./admin-bot
#          dockerfile: docker/Dockerfile

      - name: Docker swarm deploy
        #        uses: appleboy/ssh-action@v0.1.6
        #        with:
        #          host: ${{ secrets.SSH_ADDRESS }}
        #          username: ${{ secrets.SSH_USERNAME }}
        #          key: ${{ secrets.SSH_PRIVATE_KEY }}
        #          port: 22
        #          script: |
        #            ls -l -a

        # Pass ssh credentials to avoid password prompt
        # IMPORTANT: Add known host
        # Open socket through a dedicated .sock file
        # -nN - stdin into the void (dev/null)
        # -T - avoid terminal request
        # Set permissions, otherwise SSH does not work

#        env:
#          DOCKER_HOST:
        #          sudo docker swarm init

        run: |
          mkdir $HOME/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > $HOME/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > $HOME/.ssh/id_rsa.pub
          ssh-keyscan -t rsa ${{ secrets.SSH_URL }} > $HOME/.ssh/known_hosts
          
          chmod 600 ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa.pub
          
          DOCKER_HOST=ssh://${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_URL }} sudo docker stack deploy -c docker-compose.stack.yml beatstore
